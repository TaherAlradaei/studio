
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Users can read their own data, and admins can read anyone's data
    match /users/{userId} {
      allow read: if request.auth.uid == userId || isAdmin();
      // Users can update their own profile, but cannot make themselves admin or trusted
      // Admins can update any user's profile, including their roles
      allow update: if (request.auth.uid == userId && !('isAdmin' in request.resource.data) && !('isTrusted' in request.resource.data)) || isAdmin();
    }

    // Admins can read and write to the settings collection
    match /settings/{docId} {
      allow read, write: if isAdmin();
    }
    
    // Authenticated users can create bookings for themselves
    match /bookings/{bookingId} {
      allow read, update, delete: if request.auth.uid == resource.data.userId || isAdmin();
      allow create: if request.auth.uid == request.resource.data.userId;
    }
    
    // Authenticated users can create academy registrations
    // Only admins can read/update all registrations
    match /academyRegistrations/{regId} {
      allow read, update: if isAdmin();
      allow create: if request.auth != null;
    }
    
    // Authenticated users can read the whole list of players looking for a team
    // Users can create/delete their own registration
    match /findATeamRegistrations/{regId} {
        allow read: if request.auth != null;
        allow create: if request.auth.uid == request.resource.data.userId;
        allow delete: if request.auth.uid == resource.data.userId || isAdmin();
    }
  }
}
