rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Helper function to check if a user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // Helper function to check if the user is the owner of the resource
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    match /users/{userId} {
      // Any authenticated user can create their own user document
      allow create: if request.auth != null && request.auth.uid == userId;
      // Users can read their own data, Admins can read any user's data
      allow get: if isOwner(userId) || isAdmin();
      // Users can update their own non-sensitive fields.
      // Admins can update any field.
      allow update: if (isOwner(userId) && !("isAdmin" in request.resource.data) && !("isTrusted" in request.resource.data)) || isAdmin();
      // Only admins can delete users (optional, good practice)
      allow delete: if isAdmin();
    }

    match /news/{articleId} {
      // Anyone can read news articles
      allow get, list: if true;
      // Only admins can create, update, or delete news articles
      allow write: if isAdmin();
    }
    
    match /bookings/{bookingId} {
        // Users can read their own bookings. Admins can read all.
        allow get: if isOwner(resource.data.userId) || isAdmin();
        // Admins can list all bookings for the dashboard/export.
        allow list: if isAdmin();
        // An authenticated user can create a booking for themselves.
        allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
        // Users can update their own booking (e.g. to cancel). Admins can update any.
        allow update: if isOwner(resource.data.userId) || isAdmin();
        // Admins can delete bookings.
        allow delete: if isAdmin();
    }

    match /academyRegistrations/{registrationId} {
        // Users can read their own registration. Admins can read all.
        allow get: if isOwner(resource.data.userId) || isAdmin();
        // Admins can list all registrations for the dashboard/export.
        allow list: if isAdmin();
        // An authenticated user can create a registration for themselves.
        allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
        // Only admins can update registrations (e.g. to change status).
        allow update: if isAdmin();
        // Only admins can delete registrations.
        allow delete: if isAdmin();
    }

    match /findATeamRegistrations/{registrationId} {
        // Any authenticated user can view the list of players.
        allow get, list: if request.auth != null;
        // An authenticated user can create a registration for themselves.
        allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
        // A user can delete their own registration. Admins can delete any.
        allow delete: if isOwner(resource.data.userId) || isAdmin();
    }

    match /settings/{settingId} {
      // Anyone can read settings like payment instructions, logo, backgrounds etc.
      allow get, list: if true;
      // Only admins can change settings.
      allow write: if isAdmin();
    }
  }
}