rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isOwner(userId) { return request.auth.uid == userId; }
    function isSuperAdmin() {
      // These are hardcoded super-admins who can never be removed via the app.
      // Used as a failsafe.
      let superAdminUIDs = ["vQF7GtgIRNeq66ktYosLQtk9W9w2", "WG8c2fN7Z9cEoHj8nebLEktLM332", "2tNIh9jQISg0zzWiYPWXq3K0RHS2", "redbn6RZ4YafH7xDPHtZDMHmGYA2", "tgpBCQIt9Ea2FEaXmJq1A0HxHK53"];
      return request.auth.uid in superAdminUIDs;
    }
    function isAppAdmin() { return request.auth.token.isAdmin == true; }
    function isAdmin() { return isSuperAdmin() || isAppAdmin(); }
    function isTrusted() { return request.auth.token.isTrusted == true; }
    function isAuthenticated() { return request.auth != null; }

    // --- PUBLIC & AUTHENTICATED ACCESS RULES ---
    
    // News articles can be read by anyone, but only written by admins.
    match /news/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Settings can be read by anyone, but only written by admins.
    match /settings/{docId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    // Any authenticated user can create their own documents.
    // Owners and Admins can manage them.
    match /bookings/{bookingId} {
      allow create: if isAuthenticated() && isOwner(request.resource.data.userId);
      allow read, update, delete: if isOwner(resource.data.userId) || isAdmin();
      allow list: if isOwner(request.auth.uid) || isAdmin(); 
    }
    
    match /academyRegistrations/{regId} {
      allow create: if isAuthenticated() && isOwner(request.resource.data.userId);
      allow read: if isOwner(resource.data.userId) || isAdmin();
      allow list: if isAdmin();
      allow update: if isOwner(resource.data.userId) || isAdmin();
    }
    
    match /findATeamRegistrations/{regId} {
      allow create: if isAuthenticated() && isOwner(request.resource.data.userId);
      allow read, list: if isAuthenticated();
      allow delete: if isOwner(resource.data.userId) || isAdmin();
    }
    
    // Users can create, read, and update their own user documents.
    // Admins can manage all user documents.
    match /users/{userId} {
      allow create: if isOwner(userId);
      allow read, update: if isOwner(userId) || isAdmin();
    }

  }
}
