rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin(userId) {
      return request.auth.uid == 'vQF7GtgIRNeq66ktYosLQtk9W9w2' || request.auth.uid == 'WG8c2fN7Z9cEoHj8nebLEktLM332';
    }

    // Users collection
    match /users/{userId} {
      allow read: if request.auth.uid == userId || isAdmin(request.auth.uid);
      allow write: if request.auth.uid == userId && !('isAdmin' in request.resource.data);
      allow write: if isAdmin(request.auth.uid);
    }

    // Bookings collection
    match /bookings/{bookingId} {
      allow read: if request.auth.uid != null;
      allow create: if request.auth.uid != null;
      allow update, delete: if request.auth.uid == resource.data.userId || isAdmin(request.auth.uid);
    }

    // Academy Registrations
    match /academyRegistrations/{registrationId} {
      allow read: if request.auth.uid == resource.data.userId || isAdmin(request.auth.uid);
      allow create: if request.auth.uid != null;
      allow update, delete: if isAdmin(request.auth.uid);
    }

    // Find A Team Registrations
    match /findATeamRegistrations/{registrationId} {
      // Allow any authenticated user to read the list to find players.
      allow read: if request.auth.uid != null;
      // Allow any authenticated user to create a registration for themselves.
      allow create: if request.auth.uid != null;
      // Only allow a user to delete their own registration, or an admin to delete any.
      allow delete: if request.auth.uid == resource.data.userId || isAdmin(request.auth.uid);
    }

    // Settings (public read, admin write)
    match /settings/{settingId} {
      allow read: if true;
      allow write: if isAdmin(request.auth.uid);
    }
  }
}
