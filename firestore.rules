rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin(uid) {
      return uid in [
        "vQF7GtgIRNeq66ktYosLQtk9W9w2",
        "WG8c2fN7Z9cEoHj8nebLEktLM332",
        "2tNIh9jQISg0zzWiYPWXq3K0RHS2",
        "redbn6RZ4YafH7xDPHtZDMHmGYA2",
        "tgpBCQIt9Ea2FEaXmJq1A0HxHK53"
      ];
    }

    // Users collection
    match /users/{userId} {
      allow read: if request.auth.uid == userId || isAdmin(request.auth.uid);
      allow write: if request.auth.uid == userId || isAdmin(request.auth.uid);
    }

    // Bookings collection
    match /bookings/{bookingId} {
      allow read: if request.auth.uid != null; // Any authenticated user can read
      allow create: if request.auth.uid != null;
      // Only owner or admin can update
      allow update: if isAdmin(request.auth.uid) || (request.auth.uid == resource.data.userId);
      // Only owner or admin can delete
      allow delete: if isAdmin(request.auth.uid) || (request.auth.uid == resource.data.userId);
    }

    // Academy Registrations
    match /academyRegistrations/{registrationId} {
      allow read: if request.auth.uid == resource.data.userId || isAdmin(request.auth.uid);
      allow create: if request.auth.uid != null;
      allow update, delete: if isAdmin(request.auth.uid);
    }

    // Find A Team Registrations
    match /findATeamRegistrations/{registrationId} {
      // Any authenticated user can read the list to find teammates
      allow read: if request.auth.uid != null;
      // Any authenticated user can register themselves
      allow create: if request.auth.uid == request.resource.data.userId;
      // Only the user who created it or an admin can delete it
      allow delete: if resource.data.userId == request.auth.uid || isAdmin(request.auth.uid);
    }

    // Settings (public read, admin write)
    match /settings/{settingId} {
      allow read: if true;
      allow write: if isAdmin(request.auth.uid);
    }
  }
}