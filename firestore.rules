
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // --- Helper Functions ---
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isAdmin() {
      // Check both the hardcoded super-admin list and the custom claim.
      return request.auth.uid in ["vQF7GtgIRNeq66ktYosLQtk9W9w2", "WG8c2fN7Z9cEoHj8nebLEktLM332", "2tNIh9jQISg0zzWiYPWXq3K0RHS2", "redbn6RZ4YafH7xDPHtZDMHmGYA2", "tgpBCQIt9Ea2FEaXmJq1A0HxHK53"]
          || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }
    
    function isTrusted() {
        return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isTrusted == true;
    }

    // --- Global Admin Rule ---
    // This gives admins full read/write access to everything.
    match /{path=**} {
      allow read, write: if isAdmin();
    }
    
    // --- Public & Anonymous Access ---
    match /news/{docId} {
      allow read: if true;
    }
    match /settings/{docId} {
      allow read: if true;
    }

    // --- User & Auth Rules ---
    match /users/{userId} {
      allow create, read, update: if isOwner(userId);
    }
    
    // --- Booking Rules ---
    match /bookings/{bookingId} {
      // Any authenticated user can create a booking for themselves.
      allow create: if isAuthenticated() && isOwner(request.resource.data.userId);
      // Users can manage their own bookings. Trusted users can also manage them.
      allow read, update: if isOwner(resource.data.userId) || isTrusted();
      // Only owners/trusted/admins can list their own bookings.
      allow list: if isOwner(request.auth.uid) || isTrusted();
       // Public can only list bookings that are confirmed or blocked to populate the calendar.
      allow list: if resource.data.status == 'confirmed' || resource.data.status == 'blocked';
    }

    // --- Academy Registration Rules ---
    match /academyRegistrations/{regId} {
      // Any authenticated user can create a registration for themselves.
      allow create: if isAuthenticated() && isOwner(request.resource.data.userId);
      // Owners can read their own registration. Admins can read any.
      allow read, update: if isOwner(resource.data.userId);
      // Only admins can list ALL registrations for the dashboard.
      allow list: if isAdmin();
    }

    // --- Find a Team Rules ---
    match /findATeamRegistrations/{regId} {
      // Any authenticated user can create a registration.
      allow create: if isAuthenticated() && isOwner(request.resource.data.userId);
      // Any authenticated user can read/list all registrations to find players.
      allow read, list: if isAuthenticated();
      // Only the owner can delete their own registration.
      allow delete: if isOwner(resource.data.userId);
    }
  }
}
