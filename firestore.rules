
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    match /users/{userId} {
      allow read: if request.auth.uid != null;
      allow write: if request.auth.uid == userId || isAdmin();
    }

    match /bookings/{bookingId} {
      allow read: if request.auth.uid != null;
      allow create: if request.auth.uid != null;
      allow update, delete: if resource.data.userId == request.auth.uid || isAdmin();
    }

    match /settings/{settingId} {
      allow read: if true;
      allow write: if isAdmin();
    }
    
    match /academyRegistrations/{registrationId} {
      // Admins can list and get any registration.
      // Users can get their own registration.
      allow read: if isAdmin() || (request.auth.uid == resource.data.userId);
      // Any authenticated user (including anonymous) can create a registration.
      allow create: if request.auth.uid != null;
      // Only an admin can update or delete registrations.
      allow update, delete: if isAdmin();
    }

    match /findATeamRegistrations/{registrationId} {
      // Any authenticated user can list/read all registrations to see who is available.
      allow read: if request.auth.uid != null;
      // Any authenticated user can create their own registration.
      allow create: if request.auth.uid != null;
      // A user can delete their own registration, or an admin can delete any.
      allow delete: if request.auth.uid == resource.data.userId || isAdmin();
    }
  }
}
